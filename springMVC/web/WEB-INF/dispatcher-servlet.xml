<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
	    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">


    <context:component-scan base-package="com.company.handler"/>


    <!-- 视图解析器   -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/view/"/>
        <property name="suffix" value=".jsp"/>
    </bean>


    <!-- 加载国际化的资源文件  ResourceBundleMessageSource会在响应时实现 id="messageSource"固定-->
    <bean class="org.springframework.context.support.ResourceBundleMessageSource" id="messageSource">
        <property name="basename" value="i18n"/>
    </bean>


    <!--    会屏蔽Controller-->
    <mvc:view-controller path="Handler/testViewController.form" view-name="success"/>
    <!--  mvc与Controller共存,很多的功能都需要他的调整  -->
<!--    <mvc:annotation-driven/>-->
    <!-- 在收到没有Controller的请求,交给servlet处理   -->
    <mvc:default-servlet-handler/>


<!--     将转换器放入springIOC容器-->
<!--    <bean class="com.company.converter.MyConverter" id="myConverter"></bean>-->
<!--    &lt;!&ndash;    将myConverter放入springMVC提供的转换器bean里面&ndash;&gt;-->
<!--    <bean class="org.springframework.context.support.ConversionServiceFactoryBean" id="conversionService1">-->
<!--        <property name="converters">-->
<!--            <set>-->
<!--                <ref bean="myConverter"/>-->
<!--            </set>-->
<!--        </property>-->
<!--    </bean>-->





<!--    数据格式化-->
    <bean class="org.springframework.format.support.FormattingConversionServiceFactoryBean" id="conversionService1">
         <property name="converters">
              <set>
                <bean class="com.company.converter.MyConverter"/>
             </set>
        </property>
    </bean>

    <!--     将 conversionService 注册到 <mvc:annotation-driven/> 里面-->
    <mvc:annotation-driven conversion-service="conversionService1" />



    <!--  文件上传  id="multipartResolver"固定-->
    <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 如果是-1则代表无限大       -->
        <property name="maxUploadSize" value="10240000"/>
    </bean>


    <!--  拦截器-->
    <mvc:interceptors>
        <mvc:interceptor>
            <!--   指定拦截的路径   ant风格      -->
            <mvc:mapping path="/**"/>
            <!--   指定不拦的路径         -->
            <mvc:exclude-mapping path="/Handler/testConverter.form"/>
            <bean class="com.company.interceptor.MyInterceptor"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <!--   指定拦截的路径   ant风格      -->
            <mvc:mapping path="/**"/>
            <!--   指定不拦的路径         -->
            <mvc:exclude-mapping path="/Handler/testConverter.form"/>
            <bean class="com.company.interceptor.MySecondInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>


    <!--    SimpleMappingExceptionResolver:用配置来处理异常-->
<!--    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
<!--        &lt;!&ndash;  异常信息error 放在request域里面 默认为exception     &ndash;&gt;-->
<!--        <property name="exceptionAttribute" value="error"/>-->
<!--        <property name="exceptionMappings" >-->
<!--            <props>-->
<!--                &lt;!&ndash;     catch(... error)  跳转到error界面         &ndash;&gt;-->
<!--                <prop key="java.lang.ArithmeticException">error</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--    </bean>-->

</beans>